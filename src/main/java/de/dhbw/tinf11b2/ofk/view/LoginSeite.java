package de.dhbw.tinf11b2.ofk.view;

import java.util.ArrayList;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.Theme;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.LoginForm;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import de.dhbw.tinf11b2.ofk.presenter.OFKViewListener;

public class LoginSeite extends CustomComponent implements OFKView, ClickListener {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	
	List<OFKViewListener> listeners = new ArrayList<OFKViewListener>();
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button registrierButton;
	
	private Button loginButton;
	//@AutoGenerated
	//private LoginForm loginForm_1;
	
	private VerticalLayout verticalLayout;
	private TextField username;
	private PasswordField password;
	private Label label;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LoginSeite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// loginForm_1
		verticalLayout = new VerticalLayout();
		username = new TextField("Username");
		password = new PasswordField("Password");
		loginButton = new Button("Login",this);
		label = new Label("Willkommen bei OFK");
		loginButton.setImmediate(false);
		loginButton.setWidth("-1px");
		loginButton.setHeight("-1px");
		verticalLayout.addComponent(username);
		verticalLayout.addComponent(password);
		verticalLayout.addComponent(loginButton);
		verticalLayout.addComponent(label);
		mainLayout.addComponent(verticalLayout, "top:30.0%;left:40.0%;");
		
		
		
//      Deprecated code:
//		loginForm_1 = new LoginForm();
//		loginForm_1.setStyleName("v-loginform");
//		loginForm_1.setImmediate(false);
//		loginForm_1.setWidth("-1px");
//		loginForm_1.setHeight("-1px");
//		mainLayout.addComponent(loginForm_1, "top:30.0%;left:40.0%;");
		
		// registrierButton
		registrierButton = new Button("Registrieren",this);
		registrierButton.setImmediate(false);
		registrierButton.setWidth("-1px");
		registrierButton.setHeight("-1px");
		mainLayout.addComponent(registrierButton, "top:92.0%;left:85.0%;");
		
		return mainLayout;
	}

	public String getUsername(){
		return username.getValue();
	}
	public String getPassword(){
		return password.getValue();
	}
	public void setLabelText(String text){
		label.setCaption(text);
	}
	
	@Override
	public void buttonClick(ClickEvent event) {
		System.out.println(listeners.get(0));
        for (OFKViewListener listener: listeners)
            listener.buttonClick(event.getButton()
                                 .getCaption());
		
	}

	@Override
	public void addListener(OFKViewListener listener) {
		listeners.add(listener);
		
	}

}
